{"version":3,"sources":["index.js"],"names":["LengthControl","props","className","id","labelID","label","decrementID","value","onClick","lengthID","length","incrementID","App","state","breakLength","sessionLength","timeLeft","isRunning","timerType","timeIntervalID","setLengthControl","bind","handleBreakLength","handleSessionLength","formatTime","handleTimeControl","handlePlay","decrementTimeLeft","timeListener","playAudio","switchTimer","clearTimeInterval","handlePause","stopAudio","init","lengthType","sign","currentLength","this","setState","e","currentTarget","minutes","Math","floor","seconds","setInterval","time","document","getElementById","play","type","clearInterval","audio","pause","currentTime","classes","src","preload","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.28846bfd.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\n\nfunction LengthControl(props) {\n  return (\n    <div className=\"length-control\">\n      <h2 id={props.labelID}>{props.label}</h2>\n      <div className=\"controls\">\n        <button id={props.decrementID} value=\"-\" onClick={props.onClick}><i className=\"fas fa-minus\" /></button>\n        <p id={props.lengthID}>{props.length}</p>\n        <button id={props.incrementID} value=\"+\" onClick={props.onClick}><i className=\"fas fa-plus\" /></button>\n      </div>\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      timeLeft: 1500, // time left in seconds\n      isRunning: false,\n      timerType: 'Session',\n      timeIntervalID: '' // for clearInterval\n    };\n    this.setLengthControl = this.setLengthControl.bind(this);\n    this.handleBreakLength = this.handleBreakLength.bind(this);\n    this.handleSessionLength = this.handleSessionLength.bind(this);\n    this.formatTime = this.formatTime.bind(this);\n    this.handleTimeControl = this.handleTimeControl.bind(this);\n    this.handlePlay = this.handlePlay.bind(this);\n    this.decrementTimeLeft = this.decrementTimeLeft.bind(this);\n    this.timeListener = this.timeListener.bind(this);\n    this.playAudio = this.playAudio.bind(this);\n    this.switchTimer = this.switchTimer.bind(this);\n    this.clearTimeInterval = this.clearTimeInterval.bind(this);\n    this.handlePause = this.handlePause.bind(this);\n    this.stopAudio= this.stopAudio.bind(this);\n    this.init = this.init.bind(this);\n  }\n\n  setLengthControl(lengthType, sign, currentLength) {\n    if (!this.state.isRunning) { // if the timer is paused\n      if (lengthType === 'sessionLength') {\n        if (sign === '-' && currentLength > 1) {\n          this.setState({\n            [lengthType]: currentLength - 1,\n            timeLeft: (currentLength * 60) - 60\n          });\n        } else if (sign === '+' && currentLength < 60) {\n          this.setState({\n            [lengthType]: currentLength + 1,\n            timeLeft: (currentLength * 60) + 60\n          });\n        }\n      } else {\n        if (sign === '-' && currentLength > 1) {\n          this.setState({[lengthType]: currentLength - 1});\n        } else if (sign === '+' && currentLength < 60) {\n          this.setState({[lengthType]: currentLength + 1});\n        }\n      }\n    }\n  }\n\n  handleBreakLength(e) {\n    this.setLengthControl('breakLength', e.currentTarget.value, this.state.breakLength);\n  }\n\n  handleSessionLength(e) {\n    this.setLengthControl('sessionLength', e.currentTarget.value, this.state.sessionLength);\n  }\n\n  // convert timeLeft(seconds) in minutes and seconds format\n  formatTime() {\n    let { timeLeft } = this.state;\n    let minutes = Math.floor(timeLeft / 60);\n    let seconds = timeLeft % 60;\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\n    seconds = seconds < 10 ? `0${seconds}` : seconds;\n    return `${minutes}:${seconds}`;\n  }\n\n  // handle play and pause\n  handleTimeControl() {\n    let { isRunning} = this.state;\n    if (isRunning) {\n      this.setState({isRunning: !isRunning});\n      this.handlePause();\n    } else {\n      this.setState({isRunning: !isRunning});\n      this.handlePlay();\n    }\n  }\n\n  handlePlay() {\n    this.setState({\n      timeIntervalID: setInterval(() => {\n        this.decrementTimeLeft();\n        this.timeListener();\n      }, 1000)\n    });\n  }\n\n  decrementTimeLeft() {\n    this.setState({timeLeft: this.state.timeLeft - 1});\n  }\n\n  timeListener() {\n    let { timerType, timeLeft, breakLength, sessionLength } = this.state;\n    this.playAudio(timeLeft);\n    if (timeLeft < 0) {\n      if (timerType === 'Session') {\n        this.clearTimeInterval();\n        this.switchTimer(breakLength * 60, 'Break');\n        this.handlePlay();\n      } else {\n        this.clearTimeInterval();\n        this.switchTimer(sessionLength * 60, 'Session');\n        this.handlePlay();\n      }\n    }\n  }\n\n  playAudio(time) {\n    if (time === 0) {\n      document.getElementById('beep').play();\n    } \n  }\n\n  switchTimer(time, type) {\n    this.setState({\n      timeLeft: time,\n      timerType: type\n    });\n  }\n\n  clearTimeInterval() {\n    clearInterval(this.state.timeIntervalID);\n  }\n\n  handlePause() {\n    this.clearTimeInterval();\n    this.stopAudio();\n  }\n\n  stopAudio() {\n    let audio = document.getElementById('beep');\n    audio.pause();\n    audio.currentTime = 0;\n  }\n\n  // initialize, reset\n  init() {\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      timeLeft: 1500,\n      isRunning: false,\n      timerType: 'Session',\n      timeIntervalID: ''\n    });\n    this.handlePause();\n  }\n\n  render() {\n    let classes = this.state.isRunning \n      ? ['fa fa-pause']\n      : ['fa fa-play'];\n\n    return (\n      <main>\n        <div id=\"pomodoro-clock\">\n          <header><h1>Pomodoro Clock</h1></header>\n          <div id=\"timer\">\n            <div id=\"timer-container\">\n              <h2 id=\"timer-label\">{this.state.timerType}</h2>\n              <p id=\"time-left\">{this.formatTime()}</p>\n            </div>\n          </div>\n          <div id=\"length-controls\">\n            <LengthControl \n              labelID={'break-label'}\n              label={'Break Length'}\n              decrementID={'break-decrement'}\n              incrementID={'break-increment'}\n              lengthID={'break-length'}\n              length={this.state.breakLength}\n              onClick={this.handleBreakLength}\n            />\n            <LengthControl \n              labelID={'session-label'}\n              label={'Session Length'}\n              decrementID={'session-decrement'}\n              incrementID={'session-increment'}\n              lengthID={'session-length'}\n              length={this.state.sessionLength}\n              onClick={this.handleSessionLength}\n            />\n          </div>\n          <div id=\"time-control\">\n            <button id=\"start_stop\" onClick={this.handleTimeControl}>\n              <i className={classes[0]} />\n            </button>\n            <button id=\"reset\" onClick={this.init}><i className=\"fas fa-sync-alt\" /></button>\n          </div>\n        </div>\n        <audio src=\"https://goo.gl/65cBl1\" id=\"beep\" preload=\"auto\" />\n      </main>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}